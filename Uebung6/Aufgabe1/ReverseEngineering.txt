Um das Spiel Triple Triad Gold in Java zu realisieren, benötigen wir folgende Klassen:
- Game(main) 
- Board 
- Player 
- Deck 
- Card

Die Klasse Game enthält ein Objekt der Klasse Board und zwei Objekte der Klasse Player.
Außerdem enthält sie eine Int-Variable zur Bestimmung des aktuellen Spielers, die auch später zur
Speicherung des Gewinners verwendet wird.
Diese Klasse simuliert die abwechselnden Züge der Spieler und entscheidet am Spielende,
wer gewonnen und wer verloren hat.
 
Bei Spielbeginn werden alle Karten des Spielbretts mit NULL initialisiert.
Die Spieler bekommen einen Namen und eine Farbe zugewiesen.
Die Decks der Spieler werden mit der Methode loadDeck der Klasse Player geladen.
Danach kann der Spieler über die Methode chooseHand der Klasse Player auswählen, 
welche 5 Karten er im aktuellen Spiel verwenden möchte. Diese Karten werden mit der Methode
takeCards aus der ArrayList der Klasse Deck gelöscht.
Alle Karten der Hand werden mit der jeweiligen Spielerfarbe initialisiert

Im Spielverlauf wird jeweils die von Spieler ausgewählte Karte und deren gewünschte 
Position auf dem Spielfeld an die Methode compareCards der Klasse Spielfeld übergeben.
Falls eine Karte "besiegt" wird, wird die Farbe der Karte zur Farbe des aktuellen Spielers geändert
und die aktuelle Anzahl seiner Karten(cards) wird hochgezählt, und die des Gegners verringert.

Am Spielende wird die Methode switchCards aufgerufen, bei der Gewinner sich Karten aus der 
Hand des Gegners aussuchen kann, diese werden in der ArrayList stolenCards gespeichert.
Danach werden die Karten der Hand und die Karten aus stolenCards mit der Methode addCard
der Klasse Deck wieder dem Deck hinzugefügt und dieses mit saveDeck (unter dem Spielernamen)
wieder abgespeichert.
Danach werden die Karten aus der Hand des Verlieres wieder seinem Deck hinzugefügt(mit addCard)
sofern sie nicht in der ArrayList stolenCards vorhanden sind. Danach wird auch dieses Deck 
mit der Methode saveDeck unter dem Spielernamen abgespeichert.
Wird das Spiel abgebrochen, so erhält der Gegner alle Karten aus der Hand desjenigen, der das
Spiel abgebrochen hat in sein Deck.

Die Klasse Board enthält ein 3x3 Array vom Typ Card.
Mithilfe der Methode compareCards die die aktuell gelegte Karte und deren Position
übergeben bekommt, kann hier die neu gelegte Karte mit den umliegenden Karten verglichen werden. 
Ist ein Wert der neu gelegten an einer Seite höher als die umliegenden Karten und die Farben der
beiden Karten sind unterschiedlich, so wird die Farbe der "besiegten" Karte geändert 
und dem Gegner gut geschrieben.

Die Klasse Player enthält ein Objekt der Klasse Deck, eine Variable,
um die Anzahl der aktuellen Karten in Spielerfarbe zu speichern 
und eine String-Variable um den Namen zu speichern.
Mit der Methode loadDeck kann das Deck aus einer vorher erstellen save-Datei geladen werden.
Das Deck wird in der Objektvariable Deck abgespeichert.
Ist keine solche Datei vorhanden, wird das Standard-Start-Deck geladen.
Ist eine save-Datei vorhanden, aber in dem gespeicherten Deck weniger als 5 Karten enthalten,
so wird das Deck zurückgesetzt und ebenfalls das Standard-Start-Deck geladen.
Mit der Methode saveDeck werden die Decks nach Spielende(nach Kartentausch) in der Datei
abgespeichert. 
 
Die Klasse Deck enthält eine ArrayLists vom Typ Karten.
In dieser ArrayList wird das komplette Deck gespeichert.
Mit der Methode addCard kann eine Karte dem Deck hinzugefügt werden.
Mit der Methode takeCard kann eine Karte aus dem Deck entfernt werden.

Die Klasse Hand enthält ein Array der Länge 5 vom Typ Card und ein boolean - Array der Länge 5
in dem gespeichert wird, ob eine Karte bereits gelegt wurde oder nicht.
Außerdem gibt es die Methode chooseCard mit der der Spieler die Karte wählen kann, die er ablegen
möchte und eine Methode placeCard mit der der Spieler die Position der Karte auf dem Spielbrett
festlegen kann. 

Die Klasse Karten enthält ein Array der Länge 4 um die Zahlen auf den Karten zu speichern und
eine Variable um die Farbe der Karte zu speichern.